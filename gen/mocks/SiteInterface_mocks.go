// Code generated by MockGen. DO NOT EDIT.
// Source: SiteHealthyInterface.go

// Package mock_services is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	dto "site-health-check/modules/site-healthy/dto"
)

// MockSiteHealthyInterface is a mock of SiteHealthyInterface interface
type MockSiteHealthyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockSiteHealthyInterfaceMockRecorder
}

// MockSiteHealthyInterfaceMockRecorder is the mock recorder for MockSiteHealthyInterface
type MockSiteHealthyInterfaceMockRecorder struct {
	mock *MockSiteHealthyInterface
}

// NewMockSiteHealthyInterface creates a new mock instance
func NewMockSiteHealthyInterface(ctrl *gomock.Controller) *MockSiteHealthyInterface {
	mock := &MockSiteHealthyInterface{ctrl: ctrl}
	mock.recorder = &MockSiteHealthyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockSiteHealthyInterface) EXPECT() *MockSiteHealthyInterfaceMockRecorder {
	return m.recorder
}

// GetActiveSites mocks base method
func (m *MockSiteHealthyInterface) GetActiveSites() dto.Form {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActiveSites")
	ret0, _ := ret[0].(dto.Form)
	return ret0
}

// GetActiveSites indicates an expected call of GetActiveSites
func (mr *MockSiteHealthyInterfaceMockRecorder) GetActiveSites() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActiveSites", reflect.TypeOf((*MockSiteHealthyInterface)(nil).GetActiveSites))
}

// PostSite mocks base method
func (m *MockSiteHealthyInterface) PostSite(site dto.Site) (dto.Form, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PostSite", site)
	ret0, _ := ret[0].(dto.Form)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PostSite indicates an expected call of PostSite
func (mr *MockSiteHealthyInterfaceMockRecorder) PostSite(site interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostSite", reflect.TypeOf((*MockSiteHealthyInterface)(nil).PostSite), site)
}

// CheckURLEvery5Minutes mocks base method
func (m *MockSiteHealthyInterface) CheckURLEvery5Minutes(URL, prefix string) chan int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckURLEvery5Minutes", URL, prefix)
	ret0, _ := ret[0].(chan int)
	return ret0
}

// CheckURLEvery5Minutes indicates an expected call of CheckURLEvery5Minutes
func (mr *MockSiteHealthyInterfaceMockRecorder) CheckURLEvery5Minutes(URL, prefix interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckURLEvery5Minutes", reflect.TypeOf((*MockSiteHealthyInterface)(nil).CheckURLEvery5Minutes), URL, prefix)
}